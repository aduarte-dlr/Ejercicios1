1.-
def contar_ocurrencias(palabras):
    ocurrencias = {}
    for palabra in palabras:
        if palabra in ocurrencias:
            ocurrencias[palabra] += 1
        else:
            ocurrencias[palabra] = 1
            return ocurrencias
        palabras = ["python", "java", "python", "c++"]
        print(contar_ocurrencias(palabras))
   

2.-
    def combinar_diccionarios(dicc1, dicc2):
    combinado = dicc1.copy()
    for clave, valor in dic2.items():
        if clave in combinado:
            combinado[clave] += valor
        else:
            combinado[clave] = valor
    return combinado
dicc1 = {'a': 1, 'b': 2}
dicc2 = {'b': 3, 'c': 4}
print(combinar_diccionarios(dicc1, dicc2))


3.-
def frec_numeros(numeros):
    frecuencia = {}
    for numero in numeros:
        if numero in frecuencia:
            frecuencia[numero] += 1
        else:
            frecuencia[numero] = 1
    return frecuencia
numeros = [1, 1, 2, 3, 3, 3]
print(frec_numeros(numeros))


4.-
def filtrar_palabras(palabras, longitud):
    return [palabra for palabra in palabras if len(palabra) > longitud]
palabras = ["hola", "mundo", "python", "programaci√≥n"]
longitud = 5
print(filtrar_palabras(palabras, longitud))


5.-
def invertir_tuplas(tuplas):
    return [(b, a) for a, b in tuplas]
tuplas = [(1, 2), (3, 4), (5, 6)]
print(invertir_tuplas(tuplas))


6.-
def valor_frecuente(numeros):
    frecuencia = {}
    for numero in numeros:
        frecuencia[numero] = frecuencia.get(numero, 0) + 1
    return max(frecuencia, key=frecuencia.get)
numeros = [1, 2, 3, 1, 2, 1]
print(valor_frecuente(numeros))


7.-
def subconjunto(conjunto1, conjunto2):
    return conjunto1.issubset(conjunto2)
conjunto1 = {1, 2, 3}
conjunto2 = {1, 2, 3, 4, 5}
print(subconjunto(conjunto1, conjunto2))


8.-
def agrupar_edad(personas):
    agrupado = {}
    for persona in personas:
        edad = persona["edad"]
        nombre = persona["nombre"]
        if edad in agrupado:
            agrupado[edad].append(nombre)
        else:
            agrupado[edad] = [nombre]
    return agrupado
personas = [{"nombre": "Ana", "edad": 25}, {"nombre": "Luis", "edad": 25}, {"nombre": "Carlos", "edad": 30}]
print(agrupar_edad(personas))


9.-
def merge_sort(lista):
    if lis(lista) <= 1:
        return lista
    medio = lis(lista) // 2
    izquierda = merge_sort(lista[:medio])
    derecha = merge_sort(lista[medio:])
    return merge(izquierda, derecha)

def merge(izquierda, derecha):
    if not izquierda:
        return derecha
    if not derecha:
        return izquierda
    return [izquierda[0]] + merge(izquierda[1:], derecha) if izquierda[0] < derecha[0] else [derecha[0]] + merge(izquierda, derecha[1:])
numeros = [5, 3, 8, 6, 2]
print(merge_sort(numeros))


10.-
def eli_menores(numeros, limite):
    return [numero for numero in numeros if numero >= limite]
numeros = [1, 2, 3, 4, 5]
limite = 3
print(eli_menores(numeros, limite))


11.-
def flatten(lista_delistas):
    return [item for sublista in lista_delistas for item in sublista]
lista_de_listas = [[1, 2], [3, 4], [5]]
print(flatten(lista_delistas))


12.-
def mediana(numeros):
    numeros.sort()
    medio = len(numeros) // 2
    return (numeros[medio] if len(numeros) % 2 != 0 else (numeros[medio - 1] + numeros[medio]) / 2)
numeros = [1, 3, 2, 4, 5]
print(mediana(numeros))


13.-
def duplicar(lista):
    return [item for item in lista for _ in range(2)]
numeros = [1, 2, 3]
print(duplicar(numeros))


14.-
def contar_palabras(frases):
    return {i: len(frase.split()) for i, frase in enumerate(frases)}
frases = ["hola mundo", "python es genial", "me gusta programar"]
print(contar_palabras(frases))


15.-
def clave_max(diccionario):
    return max(diccionario, key=diccionario.get)
diccionario = {'a': 10, 'b': 20, 'c': 5}
print(clave_max(diccionario))



16.-
def encontrar_palindromo(palabras):
    return [palabra for palabra in palabras if palabra == palabra[::-1]]
palabras = ["ana", "oso", "hola", "level"]
print(encontrar_palindromo(palabras))
